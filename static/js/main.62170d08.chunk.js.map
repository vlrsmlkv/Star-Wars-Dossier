{"version":3,"sources":["utils.js","DossierItem.jsx","Dossier.jsx","PagePaginationButtons.jsx","PageUpButton.jsx","App.js","starWarsUrl.js","index.js"],"names":["fetchStarWarsCharacter","url","setIsLoading","a","axios","get","then","response","characters","data","results","nextPageUrl","next","previousPageUrl","previous","catch","error","console","DossierItem","name","value","FlexboxGrid","Item","colspan","justify","Dossier","componentClass","Col","md","sm","xs","className","gender","birth_year","height","mass","hair_color","skin_color","eye_color","PagePaginationButtons","onPreviousButtonClick","onNextButtonClick","isNextButtonDisabled","isPreviousButtonDisabled","currentPageNumber","setCurrentPageNumber","isLoading","align","Pagination","prev","size","pages","onClick","disabled","PageUpButton","isVisibleButton","IconButton","icon","Icon","window","scrollTo","top","behavior","App","useState","setCharacters","setNextPageUrl","setPreviousPageUrl","pageNumber","setPageNumber","setIsVisibleButton","fetchCharactersPage","pageUrl","useEffect","handlePageScroll","pageYOffset","addEventListener","removeEventListener","Loader","backdrop","inverse","content","vertical","map","el","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62170d08.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst fetchStarWarsCharacter = async (url, setIsLoading) => { \n  setIsLoading(true)\n  return await axios.get(url) \n    .then(response => {\n      setIsLoading(false);\n\n      return {\n        characters: response.data.results,\n        nextPageUrl: response.data.next,\n        previousPageUrl: response.data.previous\n      }\n      \n    })\n    .catch(error => console.error(`Error: ${error}`))\n}\n\nexport { fetchStarWarsCharacter }","import { FlexboxGrid } from 'rsuite';\n\nconst DossierItem = ({name, value}) => (\n    <FlexboxGrid.Item colspan={24}>\n      <FlexboxGrid justify=\"space-around\">\n        <FlexboxGrid.Item colspan={12}>{name}</FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={12}>{value}</FlexboxGrid.Item>\n      </FlexboxGrid>\n    </FlexboxGrid.Item>\n  )\n\nexport default DossierItem;","import { FlexboxGrid, Col } from 'rsuite';\nimport DossierItem from './DossierItem';\n\nconst Dossier = ({data}) => {\n\n  if (!data) return null;\n\n  return (\n    <FlexboxGrid.Item componentClass={Col} md={8} sm={12} xs={24}>\n      <FlexboxGrid className=\"dossier-container\">\n        <FlexboxGrid.Item colspan={24} className=\"dossier-title\">{data.name}</FlexboxGrid.Item>\n        <DossierItem\n          name=\"Gender\"\n          value={data.gender}\n        />\n        <DossierItem\n          name=\"Date of birth\"\n          value={data.birth_year}\n        />\n        <DossierItem\n          name=\"Height\"\n          value={data.height}\n        />\n        <DossierItem\n          name=\"Mass\"\n          value={data.mass}\n        />\n        <DossierItem\n          name=\"Hair color\"\n          value={data.hair_color}\n        />\n        <DossierItem\n          name=\"Skin color\"\n          value={data.skin_color}\n        />\n        <DossierItem\n          name=\"Eye color\"\n          value={data.eye_color}\n        />\n      </FlexboxGrid>\n    </FlexboxGrid.Item>  \n  )\n\n}\n\nexport default Dossier; \n\n","import { Pagination } from 'rsuite';\nimport { FlexboxGrid } from 'rsuite';\n\nconst PagePaginationButtons = ({\n  onPreviousButtonClick, onNextButtonClick,\n  isNextButtonDisabled, isPreviousButtonDisabled,\n  currentPageNumber, setCurrentPageNumber,\n  isLoading\n}) => (\n  <FlexboxGrid className=\"page-pagination\" align=\"middle\">\n    <FlexboxGrid.Item> \n      <Pagination  \n        prev\n        size=\"lg\" \n        pages={0}\n        onClick={() => {\n          onPreviousButtonClick();\n          setCurrentPageNumber(currentPageNumber-1)\n        }}\n        disabled={isPreviousButtonDisabled || isLoading}\n      />\n    </FlexboxGrid.Item>\n\n    <FlexboxGrid.Item> \n      <div className=\"page-number\">\n          {currentPageNumber}\n      </div> \n    </FlexboxGrid.Item>\n\n    <FlexboxGrid.Item> \n      <Pagination \n        next\n        size=\"lg\" \n        pages={0}\n        onClick={() => {\n          onNextButtonClick();\n          setCurrentPageNumber(currentPageNumber+1)\n        }}\n        disabled={isNextButtonDisabled || isLoading}\n      />\n    </FlexboxGrid.Item>\n  </FlexboxGrid>\n\n)\n\nexport default PagePaginationButtons;\n","import { Icon, IconButton } from 'rsuite';\nimport { FlexboxGrid } from 'rsuite';\n\nconst PageUpButton = ({isVisibleButton}) => {\n\n    const scrollToTop = () => \n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      })\n    \n    return (\n      <FlexboxGrid className={`page-up-button ${!isVisibleButton && \"is-hidden\"}`}>\n        <IconButton\n          icon={<Icon icon=\"angle-double-up\"/>}\n          size=\"lg\"\n          onClick={() => scrollToTop()}>\n        </IconButton>\n      </FlexboxGrid>\n    )\n\n}\n\nexport default PageUpButton;","import { Loader } from 'rsuite';\nimport { FlexboxGrid } from 'rsuite';\n\nimport './index.css';\n\nimport { starWarsUrl } from './starWarsUrl';\n\nimport { useState } from 'react'; \nimport { useEffect } from 'react';\nimport { fetchStarWarsCharacter } from './utils';\n\nimport Dossier from './Dossier';\nimport PagePaginationButtons from './PagePaginationButtons';\nimport PageUpButton from './PageUpButton';\n\nconst App = () => {\n\n  const [characters, setCharacters] = useState(null); \n  const [nextPageUrl, setNextPageUrl] = useState(null); \n  const [previousPageUrl, setPreviousPageUrl] = useState(null); \n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisibleButton, setIsVisibleButton] = useState(false);\n\n  const fetchCharactersPage = async (pageUrl) => {\n    const {\n      characters,\n      nextPageUrl,\n      previousPageUrl\n    } = await fetchStarWarsCharacter(pageUrl, setIsLoading);\n\n    setCharacters(characters)\n    setNextPageUrl(nextPageUrl)\n    setPreviousPageUrl(previousPageUrl)\n  }\n  \n  useEffect(() => fetchCharactersPage(starWarsUrl), []);\n  \n  const handlePageScroll = () => {\n    setIsVisibleButton((window.pageYOffset > 140) ? true : false)\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handlePageScroll)\n    return () => window.removeEventListener('scroll', handlePageScroll)\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Star Wars Characters</h1> \n\n      {isLoading \n        && <Loader \n          className=\"loader\" \n          backdrop \n          size=\"lg\" \n          inverse \n          content=\"Fetching characters...\" \n          vertical\n        />\n      }\n\n      {characters \n        && <PagePaginationButtons\n          onPreviousButtonClick={() => fetchCharactersPage(previousPageUrl)}\n          onNextButtonClick={() => fetchCharactersPage(nextPageUrl)}\n          isNextButtonDisabled={!nextPageUrl}\n          isPreviousButtonDisabled={!previousPageUrl}\n          currentPageNumber={pageNumber}\n          setCurrentPageNumber={setPageNumber}\n          isLoading={isLoading}\n        />\n      }  \n      \n      <FlexboxGrid className=\"dossiers-container\" justify=\"start\">\n      {characters && characters.map((el,index) => <Dossier key={`character+${index+1}`} data={el}/>)}\n      </FlexboxGrid>\n\n      {characters\n        && <PagePaginationButtons\n        onPreviousButtonClick={() => fetchCharactersPage(previousPageUrl)}\n        onNextButtonClick={() => fetchCharactersPage(nextPageUrl)}\n        isNextButtonDisabled={!nextPageUrl}\n        isPreviousButtonDisabled={!previousPageUrl}\n        currentPageNumber={pageNumber}\n        setCurrentPageNumber={setPageNumber}\n        isLoading={isLoading}\n        />\n      } \n      \n      {characters \n        && <FlexboxGrid justify=\"end\"> \n          <PageUpButton\n            isVisibleButton={isVisibleButton}\n          />\n        </FlexboxGrid>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","export const starWarsUrl = 'https://swapi.py4e.com/api/people/';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}