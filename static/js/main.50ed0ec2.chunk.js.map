{"version":3,"sources":["utils.js","CharactersButton.jsx","Dossier.jsx","App.js","index.js"],"names":["getStarWarsCharacter","url","onFetchedData","setIsLoading","axios","get","then","response","data","catch","error","console","CharactersButton","characters","fetchedData","Button","onClick","results","appearance","color","Dossier","FlexboxGrid","justify","className","Item","colspan","name","componentClass","Col","md","gender","birth_year","height","mass","hair_color","skin_color","eye_color","App","useState","setCharacters","setFetchedData","pageNumber","setPageNumber","isLoading","isVisibleButton","setIsVisibleButton","toggleButtonVisibility","window","pageYOffset","useEffect","addEventListener","Loader","size","inverse","center","content","vertical","IconButton","previous","icon","Icon","placement","disabled","next","map","el","index","style","display","scrollTo","top","behavior","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50ed0ec2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getStarWarsCharacter = (url, onFetchedData, setIsLoading) => { \n  setIsLoading(true)\n  axios.get(url) \n    .then(response => {\n      onFetchedData(response.data);\n      setIsLoading(false);\n    })\n    .catch(error => console.error(`Error: ${error}`))\n}\n\nexport { getStarWarsCharacter }","import { Button } from 'rsuite';\nimport { getStarWarsCharacter } from './utils';\n\nconst starWarsurl = 'https://swapi.dev/api/people/';\n\nconst CharactersButton = ({characters, fetchedData, setIsLoading}) => {\n\n  return (\n      <Button \n        onClick={() => {\n          getStarWarsCharacter(starWarsurl, (data) => {\n            fetchedData(data)\n            characters(data.results)\n          }, setIsLoading)\n        }}   \n        appearance=\"ghost\" \n        color=\"blue\">\n        Click me to fetch\n      </Button>\n  )\n}\n\n\nexport default CharactersButton;","// import { Grid, Row, Col } from 'rsuite';\nimport { FlexboxGrid, Col } from 'rsuite';\n\nconst Dossier = ({data}) => {\n\n  if (!data) return null;\n\n  return (\n    // <Grid className=\"dossier-container\">\n    //   <Row className=\"dossier-title\">{data.name}</Row>\n    //   <Row>\n    //       <Col md={12}>Gender</Col>\n    //       <Col md={12}>{data.gender}</Col>\n    //   </Row> \n    //   <Row>\n    //       <Col md={12}>Date of birth</Col>\n    //       <Col md={12}>{data.birth_year}</Col>\n    //   </Row>\n    //   <Row>\n    //       <Col md={12}>Height</Col>\n    //       <Col md={12}>{data.height}</Col>\n    //   </Row>\n    //   <Row>\n    //       <Col md={12}>Mass</Col>\n    //       <Col md={12}>{data.mass}</Col>\n    //   </Row>\n    //   <Row>\n    //       <Col md={12}>Hair color</Col>\n    //       <Col md={12}>{data.hair_color}</Col>\n    //   </Row>\n    //   <Row>\n    //       <Col md={12}>Scin color</Col>\n    //       <Col md={12}>{data.skin_color}</Col>\n    //   </Row>\n    //   <Row>\n    //       <Col md={12}>Eye color</Col>\n    //       <Col md={12}>{data.eye_color}</Col>\n    //   </Row>\n    //   {/* <Row>\n    //       <Col md={12}>Homeworld</Col>\n    //       <Col md={12}>{data.homeworld}</Col>\n    //   </Row>   */}\n      \n    // </Grid>\n\n    <FlexboxGrid justify=\"space-around\" className=\"dossier-container\">\n      <FlexboxGrid.Item colspan={24} className=\"dossier-title\">{data.name}</FlexboxGrid.Item>\n\n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Gender</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.gender}</FlexboxGrid.Item>\n      </FlexboxGrid.Item> \n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Date of birth</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.birth_year}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Height</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.height}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Mass</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.mass}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Hair color</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.hair_color}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Scin color</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.skin_color}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={24}>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Eye color</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.eye_color}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>\n      {/* <FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>Homeworld</FlexboxGrid.Item>\n          <FlexboxGrid.Item componentClass={Col} md={12}>{data.homeworld}</FlexboxGrid.Item>\n      </FlexboxGrid.Item>   */}\n      \n    </FlexboxGrid>\n  )\n\n}\n\nexport default Dossier; \n\n","import { Icon, IconButton } from 'rsuite';\nimport { Loader } from 'rsuite';\nimport { FlexboxGrid } from 'rsuite';\n\nimport './index.css';\n\nimport { useState } from 'react'; \nimport { useEffect } from 'react';\nimport CharactersButton from './CharactersButton.jsx';\nimport { getStarWarsCharacter } from './utils';\n\nimport Dossier from './Dossier';\n\nconst App = () => {\n\n  const [characters, setCharacters] = useState(null);\n  const [fetchedData, setFetchedData] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisibleButton, setIsVisibleButton] = useState(false);\n\n  const toggleButtonVisibility = () => {\n    setIsVisibleButton((window.pageYOffset > 140) ? true : false)\n  }\n\n  useEffect(() => {window.addEventListener('scroll', toggleButtonVisibility)});\n\n  return (\n    <div className=\"App\">\n      <h1>Star Wars Characters</h1> \n        {!fetchedData && <CharactersButton\n          className=\"fetch-button\"\n          characters={setCharacters}\n          fetchedData={setFetchedData}\n          setIsLoading={setIsLoading}/>\n        }\n\n        {isLoading && <Loader size=\"lg\" inverse center content=\"Fetching characters...\" vertical />}\n\n        {fetchedData && <div className=\"page-pagination-top\">\n          <IconButton \n            onClick={() => {\n              getStarWarsCharacter(fetchedData.previous, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.previous ? pageNumber-1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-left\" />} \n            placement=\"right\"\n            disabled={!fetchedData.previous || isLoading}>\n          </IconButton> \n\n          <div className=\"page-number\">{pageNumber}</div>\n\n          <IconButton\n            onClick={() => {\n              getStarWarsCharacter(fetchedData.next, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.next ? pageNumber+1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-right\"/>} \n            placement=\"right\"\n            disabled={!fetchedData.next || isLoading}>\n          </IconButton>\n        </div>}  \n        \n        <FlexboxGrid justify=\"center\">\n          {!isLoading && characters && characters.map((el,index) => <Dossier key={`character+${index+1}`} data={el}/>)}\n        </FlexboxGrid>\n\n        {fetchedData && isVisibleButton && <div className=\"page-pagination-bottom\">\n          <IconButton \n            onClick={() => {\n              getStarWarsCharacter(fetchedData.previous, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.previous ? pageNumber-1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-left\" />} \n            placement=\"right\"\n            disabled={!fetchedData.previous || isLoading}>\n          </IconButton> \n\n          <div className=\"page-number\">{pageNumber}</div>\n          \n          <IconButton\n            onClick={() => {\n              getStarWarsCharacter(fetchedData.next, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.next ? pageNumber+1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-right\"/>} \n            placement=\"right\"\n            disabled={!fetchedData.next || isLoading}>\n          </IconButton>\n        </div>} \n        \n        {fetchedData && <div className=\"page-up-button\">\n          <IconButton\n            style={{display: isVisibleButton ? \"inline\" : \"none\"}}\n            icon={<Icon icon=\"angle-double-up\"/>}\n            size=\"lg\"\n            onClick={() => window.scrollTo({\n              top: 0,\n              behavior: \"smooth\"\n            })}>\n          </IconButton>\n        </div>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}