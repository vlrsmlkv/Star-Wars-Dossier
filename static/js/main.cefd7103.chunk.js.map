{"version":3,"sources":["utils.js","CharactersButton.jsx","Dossier.jsx","App.js","index.js"],"names":["getStarWarsCharacter","url","onFetchedData","setIsLoading","axios","get","then","response","data","catch","error","console","CharactersButton","characters","fetchedData","Button","onClick","results","appearance","color","Dossier","Grid","className","Row","name","Col","md","gender","birth_year","height","mass","hair_color","skin_color","eye_color","App","useState","setCharacters","setFetchedData","pageNumber","setPageNumber","isLoading","Loader","size","inverse","center","content","vertical","IconButton","previous","icon","Icon","placement","disabled","next","map","el","index","window","scrollTo","top","behavior","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cefd7103.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getStarWarsCharacter = (url, onFetchedData, setIsLoading) => { \n  setIsLoading(true)\n  axios.get(url) \n    .then(response => {\n      onFetchedData(response.data);\n      setIsLoading(false);\n    })\n    .catch(error => console.error(`Error: ${error}`))\n}\n\nexport { getStarWarsCharacter }","import { Button } from 'rsuite';\nimport { getStarWarsCharacter } from './utils';\n\nconst starWarsurl = 'https://swapi.dev/api/people/';\n\nconst CharactersButton = ({characters, fetchedData, setIsLoading}) => {\n\n  return (\n      <Button \n        onClick={() => {\n          getStarWarsCharacter(starWarsurl, (data) => {\n            fetchedData(data)\n            characters(data.results)\n          }, setIsLoading)\n        }}   \n        appearance=\"ghost\" \n        color=\"blue\">\n        Click me to fetch\n      </Button>\n  )\n}\n\n\nexport default CharactersButton;","import { Grid, Row, Col } from 'rsuite';\n\nconst Dossier = ({data}) => {\n\n  if (!data) return null;\n\n  return (\n    <Grid className=\"dossier-container\">\n      <Row className=\"dossier-title\">{data.name}</Row>\n      <Row>\n          <Col md={12}>Gender</Col>\n          <Col md={12} >{data.gender}</Col>\n      </Row> \n      <Row>\n          <Col md={12}>Date of birth</Col>\n          <Col md={12} >{data.birth_year}</Col>\n      </Row>\n      <Row>\n          <Col md={12}>Height</Col>\n          <Col md={12} >{data.height}</Col>\n      </Row>\n      <Row>\n          <Col md={12}>Mass</Col>\n          <Col md={12} >{data.mass}</Col>\n      </Row>\n      <Row>\n          <Col md={12}>Hair color</Col>\n          <Col md={12} >{data.hair_color}</Col>\n      </Row>\n      <Row>\n          <Col md={12}>Scin color</Col>\n          <Col md={12} >{data.skin_color}</Col>\n      </Row>\n      <Row>\n          <Col md={12}>Eye color</Col>\n          <Col md={12} >{data.eye_color}</Col>\n      </Row>\n      {/* <Row>\n          <Col md={12}>Homeworld</Col>\n          <Col md={12} >{data.homeworld}</Col>\n      </Row>   */}\n      \n    </Grid>\n  )\n\n}\n\nexport default Dossier; \n\n","import { Icon, IconButton } from 'rsuite';\nimport { Loader } from 'rsuite';\n\nimport './index.css';\n\nimport { useState } from 'react'; \nimport CharactersButton from './CharactersButton.jsx';\nimport { getStarWarsCharacter } from './utils';\n\nimport Dossier from './Dossier';\n\nconst App = () => {\n\n  const [characters, setCharacters] = useState(null);\n  const [fetchedData, setFetchedData] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Star Wars Characters</h1> \n        {!fetchedData && <CharactersButton\n          className=\"fetch-button\"\n          characters={setCharacters}\n          fetchedData={setFetchedData}\n          setIsLoading={setIsLoading}/>\n        }\n\n        {isLoading && <Loader size=\"lg\" inverse center content=\"Fetching characters...\" vertical />}\n\n        {fetchedData && <div className=\"page-pagination-top\">\n          <IconButton \n            onClick={() => {\n              getStarWarsCharacter(fetchedData.previous, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.previous ? pageNumber-1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-left\" />} \n            placement=\"right\"\n            disabled={!fetchedData.previous || isLoading}>\n          </IconButton> \n\n          <div className=\"page-number\">{pageNumber}</div>\n\n          <IconButton\n            onClick={() => {\n              getStarWarsCharacter(fetchedData.next, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.next ? pageNumber+1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-right\"/>} \n            placement=\"right\"\n            disabled={!fetchedData.next || isLoading}>\n          </IconButton>\n        </div>}  \n\n        <div className=\"dossiers-container\"> \n          {!isLoading && characters && characters.map((el,index) => <Dossier key={`character+${index+1}`} data={el}/>)}\n        </div>\n\n        {fetchedData && <div className=\"page-pagination-bottom\">\n          <IconButton \n            onClick={() => {\n              getStarWarsCharacter(fetchedData.previous, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.previous ? pageNumber-1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-left\" />} \n            placement=\"right\"\n            disabled={!fetchedData.previous || isLoading}>\n          </IconButton> \n\n          <div className=\"page-number\">{pageNumber}</div>\n          \n          <IconButton\n            onClick={() => {\n              getStarWarsCharacter(fetchedData.next, (data) => {\n                setFetchedData(data)\n                setCharacters(data.results)\n              }, setIsLoading)\n              setPageNumber(fetchedData.next ? pageNumber+1 : pageNumber)\n            }} \n            icon={<Icon icon=\"arrow-right\"/>} \n            placement=\"right\"\n            disabled={!fetchedData.next || isLoading}>\n          </IconButton>\n        </div>} \n        \n        {fetchedData && <div className=\"page-up-button\">\n          <IconButton\n            icon={<Icon icon=\"angle-double-up\"/>}\n            size=\"lg\"\n            onClick={() => window.scrollTo({\n              top: 0,\n              behavior: \"smooth\"\n            })}>\n          </IconButton>\n        </div>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}